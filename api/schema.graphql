scalar DateTime

type Query {
  me: Barber
  customers(served: Boolean!): [Customer!]!
  isAccepting: Boolean!
}

type Mutation {
  logIn(username: String!, password: String!): String!
  setAccepting(accepting: Boolean!): Boolean!
  serveCustomer(id: ID!): Customer!
  removeCustomer(id: ID!): Customer!
}

type Subscription {
  acceptingChanged: Boolean!
  customerAdded: Customer!
  customerUpdated: Customer!
  customerRemoved: Customer!
}

type Barber {
  id: ID!
  name: String!
  username: String!
  nowServing: Customer
}

type Customer {
  id: ID!
  name: String!
  phone: String!
  waitingSince: DateTime!
  servedAt: DateTime
  servedBy: Barber
  messages: [Message!]!
}

type Message {
  id: ID!
  text: String!
  sentAt: DateTime!
}
